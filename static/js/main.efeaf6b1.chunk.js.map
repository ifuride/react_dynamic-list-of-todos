{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Filter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","onChangeQuery","onChangeFilter","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","useState","user","setUser","useEffect","userId","userFromServer","href","email","name","App","setTodos","setQuery","All","filterBy","setFilterBy","setSelectedTodo","todosFromServer","todosToShow","visibleTodos","queryLowerCase","toLowerCase","trim","filter","includes","Active","Completed","getVisibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efeaf6b1.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            {todo.completed\n              ? (<p className=\"has-text-success\">{todo.title}</p>)\n              : (<p className=\"has-text-danger\">{todo.title}</p>)}\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodo && selectedTodo.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (query: string) => void,\n  onChangeFilter: (filterBy: Filter) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  onChangeFilter,\n}) => {\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChangeQuery(event.target.value);\n  };\n\n  const handleClearSearch = () => {\n    if (query) {\n      onChangeQuery('');\n    }\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onChangeFilter(event.target.value as Filter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectTodo: (todo: Todo | null) => void\n  selectedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {selectedTodo && `Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                <span>{user.name}</span>\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nfunction getVisibleTodos(todos: Todo[], query: string, filterBy: string) {\n  let visibleTodos = [...todos];\n\n  if (query) {\n    const queryLowerCase = query.toLowerCase().trim();\n\n    visibleTodos = visibleTodos.filter(({ title }) => (\n      title.toLowerCase().includes(queryLowerCase)));\n  }\n\n  if (filterBy !== Filter.All) {\n    visibleTodos = visibleTodos.filter(({ completed }) => {\n      switch (filterBy) {\n        case Filter.Active:\n          return !completed;\n        case Filter.Completed:\n          return completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return visibleTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const todosToShow = getVisibleTodos(todos, query, filterBy);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={setQuery}\n                onChangeFilter={setFilterBy}\n              />\n            </div>\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={todosToShow}\n                selectTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}